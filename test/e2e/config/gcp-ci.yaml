---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - gcp
managementClusterName: capg-e2e

images:
  # Use local dev images built source tree;
  - name: gcr.io/k8s-staging-cluster-api-gcp/cluster-api-gcp-controller:e2e
    loadBehavior: mustLoad

providers:
  - name: cluster-api
    type: CoreProvider
    versions:
    - name: v1.0.2
      value: https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.0.2/core-components.yaml
      type: url
      files:
      - sourcePath: "../data/shared/v1beta1/metadata.yaml"
      replacements:
      - old: "imagePullPolicy: Always"
        new: "imagePullPolicy: IfNotPresent"
      - old: "--leader-elect"
        new: "--leader-elect=false"
  - name: kubeadm
    type: BootstrapProvider
    versions:
    - name: v1.0.2
      value: https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.0.2/bootstrap-components.yaml
      type: url
      files:
      - sourcePath: "../data/shared/v1beta1/metadata.yaml"
      replacements:
      - old: "imagePullPolicy: Always"
        new: "imagePullPolicy: IfNotPresent"
      - old: "--leader-elect"
        new: "--leader-elect=false"
  - name: kubeadm
    type: ControlPlaneProvider
    versions:
    - name: v1.0.2
      value: https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.0.2/control-plane-components.yaml
      type: url
      files:
      - sourcePath: "../data/shared/v1beta1/metadata.yaml"
      replacements:
      - old: "imagePullPolicy: Always"
        new: "imagePullPolicy: IfNotPresent"
      - old: "--leader-elect"
        new: "--leader-elect=false"
  - name: gcp
    type: InfrastructureProvider
    versions:
    - name: v1.0.99 # next; use manifest from source files
      value: "${PWD}/config/default"
    files:
    - sourcePath: "${PWD}/metadata.yaml"
      targetName: "metadata.yaml"
    - sourcePath: "${PWD}/templates/test/cluster-template-ci.yaml"
      targetName: "cluster-template.yaml"
    - sourcePath: "${PWD}/templates/test/cluster-template-prow-ci-version.yaml"
      targetName: "cluster-template-conformance-ci-artifacts.yaml"

variables:
  KUBERNETES_VERSION: "${KUBERNETES_VERSION:-v1.22.3}"
  EXP_CLUSTER_RESOURCE_SET: "true"
  # Cluster Addons
  CNI: "${PWD}/test/e2e/data/cni/calico/calico.yaml"
  GCP_CONTROL_PLANE_MACHINE_TYPE: n1-standard-2
  GCP_NODE_MACHINE_TYPE: n1-standard-2
  CONFORMANCE_CI_ARTIFACTS_KUBERNETES_VERSION: "v1.22.3"
  CONFORMANCE_WORKER_MACHINE_COUNT: "5"
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: "1"
  CONFORMANCE_NODES: "${CONFORMANCE_NODES:-4}"
  IMAGE_ID: "${IMAGE_ID}"
  IP_FAMILY: "IPv4"

intervals:
  default/wait-controllers: ["3m", "10s"]
  default/wait-cluster: ["20m", "10s"]
  default/wait-control-plane: ["30m", "10s"]
  default/wait-worker-nodes: ["30m", "10s"]
  default/wait-delete-cluster: ["20m", "10s"]
  default/wait-machine-upgrade: ["50m", "10s"]
  default/wait-machine-remediation: ["30m", "10s"]
  default/wait-deployment: ["5m", "10s"]
  default/wait-job: ["5m", "10s"]
  default/wait-service: ["3m", "10s"]
