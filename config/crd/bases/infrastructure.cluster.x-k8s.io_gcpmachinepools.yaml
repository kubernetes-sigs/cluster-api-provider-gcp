---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: gcpmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: GCPMachinePool
    listKind: GCPMachinePoolList
    plural: gcpmachinepools
    singular: gcpmachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this GCPMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: GCPMachinePool is the Schema for the gcpmachinepools API and
          represents a GCP Machine Pool.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GCPMachinePoolSpec defines the desired state of GCPMachinePool
              and the GCP instances that it will create.
            properties:
              additionalDisks:
                description: AdditionalDisks are optional non-boot attached disks.
                items:
                  description: AttachedDiskSpec degined GCP machine disk.
                  properties:
                    deviceType:
                      description: |-
                        DeviceType is a device type of the attached disk.
                        Supported types of non-root attached volumes:
                        1. "pd-standard" - Standard (HDD) persistent disk
                        2. "pd-ssd" - SSD persistent disk
                        3. "local-ssd" - Local SSD disk (https://cloud.google.com/compute/docs/disks/local-ssd).
                        Default is "pd-standard".
                      enum:
                      - pd-standard
                      - pd-ssd
                      - local-ssd
                      type: string
                    size:
                      description: |-
                        Size is the size of the disk in GBs.
                        Defaults to 30GB. For "local-ssd" size is always 375GB.
                      format: int64
                      type: integer
                  type: object
                type: array
              additionalLabels:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalLabels is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  GCP provider. If both the GCPCluster and the GCPMachinePool specify the same tag name with different values, the
                  GCPMachinePool's value takes precedence.
                type: object
              additionalMetadata:
                description: |-
                  AdditionalMetadata is an optional set of metadata to add to an instance, in addition to the ones added by default by the
                  GCP provider.
                items:
                  description: MetadataItem is a key/value pair to add to the instance's
                    metadata.
                  properties:
                    key:
                      description: Key is the identifier for the metadata entry.
                      type: string
                    value:
                      description: Value is the value of the metadata entry.
                      type: string
                  required:
                  - key
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - key
                x-kubernetes-list-type: map
              additionalNetworkTags:
                description: |-
                  AdditionalNetworkTags is a list of network tags that should be applied to the
                  instance. These tags are set in addition to any network tags defined
                  at the cluster level or in the actuator.
                items:
                  type: string
                type: array
              image:
                description: |-
                  Image is the full reference to a valid image to be used for this machine.
                  Takes precedence over ImageFamily.
                type: string
              imageFamily:
                description: ImageFamily is the family of the image to be used for
                  this machine.
                type: string
              instanceType:
                description: 'InstanceType is the type of instance to create. Example:
                  n1.standard-2'
                type: string
              location:
                description: Location is the GCP region location ex us-central1
                type: string
              network:
                description: Network is the network to be used by machines in the
                  machine pool.
                type: string
              nodeDrainTimeout:
                description: |-
                  NodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                  The default value is 0, meaning that the node can be drained without any time limitations.
                  NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                type: string
              providerID:
                description: ProviderID is the identification ID of the Managed Instance
                  Group
                type: string
              providerIDList:
                description: ProviderIDList is the unique identifier as specified
                  by the cloud provider.
                items:
                  type: string
                type: array
              publicIP:
                description: |-
                  PublicIP specifies whether the instance should get a public IP.
                  Set this to true if you don't have a NAT instances or Cloud Nat setup.
                type: boolean
              rootDeviceSize:
                description: |-
                  RootDeviceSize is the size of the root volume in GB.
                  Defaults to 30.
                format: int64
                type: integer
              rootDeviceType:
                description: |-
                  RootDeviceType is the type of the root volume.
                  Supported types of root volumes:
                  1. "pd-standard" - Standard (HDD) persistent disk
                  2. "pd-ssd" - SSD persistent disk
                  Default is "pd-standard".
                enum:
                - pd-standard
                - pd-ssd
                - pd-balanced
                type: string
              serviceAccounts:
                description: |-
                  ServiceAccount specifies the service account email and which scopes to assign to the machine.
                  Defaults to: email: "default", scope: []{compute.CloudPlatformScope}
                properties:
                  email:
                    description: 'Email: Email address of the service account.'
                    type: string
                  scopes:
                    description: |-
                      Scopes: The list of scopes to be made available for this service
                      account.
                    items:
                      type: string
                    type: array
                type: object
              strategy:
                default:
                  rollingUpdate:
                    deletePolicy: Oldest
                    maxSurge: 1
                    maxUnavailable: 0
                  type: RollingUpdate
                description: The deployment strategy to use to replace existing GCPMachinePoolMachines
                  with new ones.
                properties:
                  rollingUpdate:
                    description: |-
                      Rolling update config params. Present only if
                      MachineDeploymentStrategyType = RollingUpdate.
                    properties:
                      deletePolicy:
                        default: Oldest
                        description: |-
                          DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                          Valid values are "Random, "Newest", "Oldest"
                          When no value is supplied, the default is Oldest
                        enum:
                        - Random
                        - Newest
                        - Oldest
                        type: string
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 1
                        description: |-
                          The maximum number of machines that can be scheduled above the
                          desired number of machines.
                          Value can be an absolute number (ex: 5) or a percentage of
                          desired machines (ex: 10%).
                          This can not be 0 if MaxUnavailable is 0.
                          Absolute number is calculated from percentage by rounding up.
                          Defaults to 1.
                          Example: when this is set to 30%, the new MachineSet can be scaled
                          up immediately when the rolling update starts, such that the total
                          number of old and new machines do not exceed 130% of desired
                          machines. Once old machines have been killed, new MachineSet can
                          be scaled up further, ensuring that total number of machines running
                          at any time during the update is at most 130% of desired machines.
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 0
                        description: |-
                          The maximum number of machines that can be unavailable during the update.
                          Value can be an absolute number (ex: 5) or a percentage of desired
                          machines (ex: 10%).
                          Absolute number is calculated from percentage by rounding down.
                          This can not be 0 if MaxSurge is 0.
                          Defaults to 0.
                          Example: when this is set to 30%, the old MachineSet can be scaled
                          down to 70% of desired machines immediately when the rolling update
                          starts. Once new machines are ready, old MachineSet can be scaled
                          down further, followed by scaling up the new MachineSet, ensuring
                          that the total number of machines available at all times
                          during the update is at least 70% of desired machines.
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    default: RollingUpdate
                    description: Type of deployment. Currently the only supported
                      strategy is RollingUpdate
                    enum:
                    - RollingUpdate
                    type: string
                type: object
              subnet:
                description: |-
                  Subnet is a reference to the subnetwork to use for this instance. If not specified,
                  the first subnetwork retrieved from the Cluster Region and Network is picked.
                type: string
              zone:
                description: Zone is the GCP zone location ex us-central1-a
                type: string
            required:
            - instanceType
            - location
            - network
            - zone
            type: object
          status:
            description: GCPMachinePoolStatus defines the observed state of GCPMachinePool
              and the GCP instances that it manages.
            properties:
              conditions:
                description: Conditions specifies the conditions for the managed machine
                  pool
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the MachinePool and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the MachinePool's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the MachinePool and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the MachinePool's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: The number of non-terminated machines targeted by this
                  machine pool that have the desired template spec.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
