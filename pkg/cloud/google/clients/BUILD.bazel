load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "clients.go",
        "cloudbilling.go",
        "cloudresourcemanagerservice.go",
        "computeservice.go",
        "servicemanagement.go",
        "token_source.go",
    ],
    importpath = "sigs.k8s.io/cluster-api-provider-gcp/pkg/cloud/google/clients",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/oauth2:go_default_library",
        "//vendor/golang.org/x/oauth2/google:go_default_library",
        "//vendor/google.golang.org/api/cloudbilling/v1:go_default_library",
        "//vendor/google.golang.org/api/cloudresourcemanager/v1:go_default_library",
        "//vendor/google.golang.org/api/compute/v1:go_default_library",
        "//vendor/google.golang.org/api/googleapi:go_default_library",
        "//vendor/google.golang.org/api/servicemanagement/v1:go_default_library",
        "//vendor/k8s.io/client-go/util/flowcontrol:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "clients_test.go",
        "cloudbilling_test.go",
        "cloudresourcemanagerservice_test.go",
        "computeservice_test.go",
        "servicemanagement_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//vendor/google.golang.org/api/cloudbilling/v1:go_default_library",
        "//vendor/google.golang.org/api/cloudresourcemanager/v1:go_default_library",
        "//vendor/google.golang.org/api/compute/v1:go_default_library",
        "//vendor/google.golang.org/api/googleapi:go_default_library",
        "//vendor/google.golang.org/api/servicemanagement/v1:go_default_library",
    ],
)
